[gd_scene load_steps=11 format=2]

[ext_resource path="res://controller.theme" type="Theme" id=1]
[ext_resource path="res://font.font" type="BitmapFont" id=2]
[ext_resource path="res://status_bar.tscn" type="PackedScene" id=3]
[ext_resource path="res://integrity.png" type="Texture" id=4]
[ext_resource path="res://temperature.png" type="Texture" id=5]
[ext_resource path="res://logo.png" type="Texture" id=6]
[ext_resource path="res://flash.png" type="Texture" id=7]

[sub_resource type="GDScript" id=1]

script/source = "
extends Panel

const port = 26004

var config = ConfigFile.new()
var button_controller
var joystick_controller
var udp
var data = PoolByteArray()
var sequence = 0
var ack = 0
var timer = 0.0
var connected_address = \"\"
var connection_active = false
var connection_timer
var configure_timer
var config_sequence_number = 1
var player_hue = 0
var background_style
var flash_intensity = 0.0
var event_trigger = 0


func _ready():
	
	background_style = StyleBoxTexture.new()
	background_style.set_texture(preload(\"res://background.png\"))
	add_stylebox_override(\"panel\", background_style)
	
	# Load configuration or set defaults
	if(config.load(\"user://settings.ini\") != OK):
		config.set_value(\"settings\", \"player_name\", \"Remote\")
		config.set_value(\"settings\", \"player_hue\", 0)
		config.set_value(\"settings\", \"controller\", 1)
		config.set_value(\"settings\", \"joystick_sensitivity\", 0.5)
		config.set_value(\"settings\", \"flags\", 0)
		config.set_value(\"settings\", \"privacy_notice\", 0)
	
	# Preload controllers
	button_controller = preload(\"res://button_controller.tscn\").instance()
	button_controller.set_name(\"Controller\")
	button_controller.set_position(Vector2(0, 160))
	joystick_controller = preload(\"res://joystick_controller.tscn\").instance()
	joystick_controller.set_name(\"Controller\")
	joystick_controller.set_position(Vector2(0, 160))
	joystick_controller.set_sensitivity(config.get_value(\"settings\", \"joystick_sensitivity\", 0.5))

	# Set intitial controller type
	set_controller_type(config.get_value(\"settings\", \"controller\", 0))
	get_node(\"Controller\").set_active(true)

	# Set up connections
	get_node(\"SettingsButton\").connect(\"pressed\", self, \"_on_settings_button_pressed\")
	get_node(\"ConnectButton\").connect(\"pressed\", self, \"_on_connect_button_pressed\")
	get_node(\"AboutButton\").connect(\"pressed\", self, \"_on_about_button_pressed\")
	get_node(\"ConnectPanel/ConnectButton\").connect(\"pressed\", self, \"_on_connect_panel_connect_button_pressed\")
	get_node(\"ConnectPanel/CancelButton\").connect(\"pressed\", self, \"_on_connect_panel_cancel_button_pressed\")
	get_node(\"ConnectPanel/GameList\").connect(\"item_selected\", self, \"_on_connect_panel_game_list_item_selected\")
	get_node(\"ManualConnectPanel/ConnectButton\").connect(\"pressed\", self, \"_on_manual_connect_panel_connect_button_pressed\")
	get_node(\"ManualConnectPanel/CancelButton\").connect(\"pressed\", self, \"_on_manual_connect_panel_cancel_button_pressed\")
	get_node(\"SettingsPanel/OKButton\").connect(\"pressed\", self, \"_on_settings_panel_ok_button_pressed\")
	get_node(\"SettingsPanel/GridContainer/PlayerColorScrollBar\").connect(\"value_changed\", self, \"_on_settings_panel_hue_changed\")
	get_node(\"AboutPanel/OKButton\").connect(\"pressed\", self, \"_on_about_panel_ok_button_pressed\")
	get_node(\"AboutPanel/LinkButton\").connect(\"pressed\", self, \"_on_about_panel_link_button_pressed\")
	get_node(\"PrivacyPanel/AcceptButton\").connect(\"pressed\", self, \"_on_privacy_panel_accept_button_pressed\")
	get_node(\"PrivacyPanel/RejectButton\").connect(\"pressed\", self, \"_on_privacy_panel_reject_button_pressed\")

	# Set up default status
	get_node(\"IntegrityBar\").set_value(1.0)
	get_node(\"TemperatureBar\").set_value(0.0)
	
	# Set up listening UDP socket
	udp = PacketPeerUDP.new();
	var err = udp.listen(0)
	if (err != OK):
		get_node(\"StatusLabel\").set_text(\"Unable to open UDP port: \" + str(err))
	
	# Set up connection timeout timer
	connection_timer = Timer.new()
	add_child(connection_timer)
	connection_timer.set_wait_time(2.0)
	connection_timer.set_one_shot(true)
	#connection_timer.set_timer_process_mode(connection_timer.TIMER_PROCESS_FIXED)
	connection_timer.connect(\"timeout\", self, \"_on_connection_timeout\")
	
	# Set up configure message inhibit timer
	configure_timer = Timer.new()
	add_child(configure_timer)
	configure_timer.set_wait_time(1.0)
	configure_timer.set_one_shot(true)
	#configure_timer.set_timer_process_mode(configure_timer.TIMER_PROCESS_FIXED)
	
	# Create empty control data message
	data.push_back(0x41)	# Header (\"ACTL\")
	data.push_back(0x43)
	data.push_back(0x54)
	data.push_back(0x4C)
	data.push_back(1)		# Version
	data.push_back(0)		# Sequence number
	data.push_back(0)
	data.push_back(0)		# Ack
	data.push_back(0)	
	data.push_back(1)		# Message type: control
	data.push_back(0)		# Digital inputs
	data.push_back(0)		# Left stick
	data.push_back(0)
	data.push_back(0)		# Right stick
	data.push_back(0)
	
	set_player_hue(config.get_value(\"settings\", \"player_hue\", 0.0))
	
	# Begin control loop	
	set_process(true)


func _on_settings_panel_hue_changed(value):
	set_player_hue(value)


func _on_settings_button_pressed():
	get_node(\"SettingsPanel/GridContainer/PlayerNameLineEdit\").set_text(config.get_value(\"settings\", \"player_name\", \"Remote\"))
	get_node(\"SettingsPanel/GridContainer/PlayerColorScrollBar\").set_value(config.get_value(\"settings\", \"player_hue\", 0))
	var type_index = config.get_value(\"settings\", \"controller\", 0)
	if type_index == 1:
		get_node(\"SettingsPanel/GridContainer/ControllerTypeContainer/ControllerTypeButton2\").set_pressed(true)
	else:
		get_node(\"SettingsPanel/GridContainer/ControllerTypeContainer/ControllerTypeButton1\").set_pressed(true)
	get_node(\"SettingsPanel/GridContainer/SensitivityScrollBar\").set_value(config.get_value(\"settings\", \"joystick_sensitivity\", 0.5))
	
	get_node(\"Controller\").set_active(false)
	get_node(\"SettingsPanel\").popup()
	get_node(\"SettingsPanel/OKButton\").grab_focus()


func _on_settings_panel_ok_button_pressed():
	var name = get_node(\"SettingsPanel/GridContainer/PlayerNameLineEdit\").get_text()
	var hue = get_node(\"SettingsPanel/GridContainer/PlayerColorScrollBar\").get_value()
	var controller = 0
	if get_node(\"SettingsPanel/GridContainer/ControllerTypeContainer/ControllerTypeButton2\").is_pressed():
		controller = 1
	var sensitivity = get_node(\"SettingsPanel/GridContainer/SensitivityScrollBar\").get_value()

	config.set_value(\"settings\", \"controller\", controller)
	config.set_value(\"settings\", \"player_name\", name)
	config.set_value(\"settings\", \"player_hue\", hue)
	config.set_value(\"settings\", \"joystick_sensitivity\", sensitivity)
		
	config.save(\"user://settings.ini\")
	
	# Apply new Settings
	set_player_hue(hue)
	set_controller_type(controller)
	joystick_controller.set_sensitivity(sensitivity)

	# Increment configuration sequence number to send an update
	if(connected_address != \"\"):
		config_sequence_number = config_sequence_number + 1
		if(config_sequence_number > 255):
			config_sequence_number = 1
		
	get_node(\"SettingsPanel\").hide()
	get_node(\"Controller\").set_active(true)


func _on_connect_button_pressed():
	
	# Show privacy notice pop-up if not yet accepted
	if(config.get_value(\"settings\", \"privacy_notice\", 0) == 0):
		get_node(\"Controller\").set_active(false)
		get_node(\"PrivacyPanel\").popup()
		return
	
	if(connected_address == \"\"):
		discover_games()
		get_node(\"Controller\").set_active(false)
		get_node(\"ConnectPanel\").popup()
	else:
		disconnect_from_game(\"\")


func _on_connect_panel_connect_button_pressed():
	# Get host address from first selected item in game list
	var list = get_node(\"ConnectPanel/GameList\")
	var index = -1
	for i in range(0, list.get_item_count()):
		if(list.is_selected(i)):
			index = i
			
	# Connect
	if(index >= 0):
		var host = list.get_item_metadata(index)
		if(host != \"0.0.0.0\"):
			connect_to_game(list.get_item_text(index), host)
		else:
			get_node(\"ManualConnectPanel/StatusLabel\").set_text(\"\")
			get_node(\"ManualConnectPanel\").popup()


func _on_connect_panel_cancel_button_pressed():
	get_node(\"ConnectPanel\").hide()
	get_node(\"Controller\").set_active(true)


func _on_connect_panel_game_list_item_selected(var index):
	# Enable connect button if a game is selected
	get_node(\"ConnectPanel/ConnectButton\").set_disabled(get_node(\"ConnectPanel/GameList\").get_selected_items().size() == 0)


func _on_manual_connect_panel_connect_button_pressed():
	# Get manually entered host address
	var address = get_node(\"ManualConnectPanel/AddressLineEdit\").get_text()
	
	# Check that entered text is a valid IPv4 address
	var values = address.split(\".\", false)
	if values.size() != 4:
		get_node(\"ManualConnectPanel/StatusLabel\").set_text(\"Invalid address!\")
		return
	for i in range(0, 4):
		var conv = values[i].to_int()
		if conv < 0 and conv > 255:
			get_node(\"ManualConnectPanel/StatusLabel\").set_text(\"Invalid address!\")
			return
	
	# Connect
	connect_to_game(address, address)


func _on_manual_connect_panel_cancel_button_pressed():
	get_node(\"ManualConnectPanel\").hide()


func _on_connection_timeout():
	disconnect_from_game(\"Timeout\")


func _on_about_button_pressed():
	get_node(\"Controller\").set_active(false)
	get_node(\"AboutPanel\").popup()


func _on_about_panel_ok_button_pressed():
	get_node(\"AboutPanel\").hide()
	get_node(\"Controller\").set_active(true)

func _on_about_panel_link_button_pressed():
	OS.shell_open(\"http://www.fractilegames.com/astronautics/\")


func _on_privacy_panel_accept_button_pressed():
	config.set_value(\"settings\", \"privacy_notice\", 1)
	config.save(\"user://settings.ini\")
	
	get_node(\"PrivacyPanel\").hide()
	get_node(\"Controller\").set_active(true)
	
	_on_connect_button_pressed()


func _on_privacy_panel_reject_button_pressed():
	get_node(\"PrivacyPanel\").hide()
	get_node(\"Controller\").set_active(true)


func _process(delta):

	while(udp.get_available_packet_count() > 0):
		var packet = udp.get_packet()
		var host = udp.get_packet_ip()
		var port = udp.get_packet_port()
		
		# Check received message header
		if(packet.size() >= 10 and packet[0] == 0x41 and packet[1] == 0x43 and packet[2] == 0x54 and packet[3] == 0x4C):
			# Check message type
			if(packet[9] == 101):
				# Game announce message
				handle_announce_message(packet, host, port)
			elif(packet[9] == 2):
				# Status message
				handle_status_message(packet, host, port)

	if(connected_address != \"\"):
		var controller = get_node(\"Controller\")
		
		# Use lower send interval while connection is \"not active\" to prevent unnecessarily spamming
		# the server in case the connection has been rejected (e.g. too many clients)
		var interval = 0.5
		if connection_active:
			interval = 0.05
		
		# Send control data to server
		timer += delta;
		if(timer > interval):
			
			if(sequence >= 65535):
				sequence = 1
			else:
				sequence = sequence + 1
			data.set(5, sequence & 0xFF)
			data.set(6, sequence >> 8)
			
			if(controller != null):
				data.set(10, controller.get_buttons())
				data.set(11, axis_to_byte(controller.get_aim_dir().x))
				data.set(12, axis_to_byte(controller.get_aim_dir().y))
				data.set(13, axis_to_byte(controller.get_move_dir().x))
				data.set(14, axis_to_byte(controller.get_move_dir().y))
			else:
				data.set(10, 0)
						
			udp.put_packet(data)
			
			timer -= interval
	
	update_flash(delta)


func connect_to_game(title, host):
		# Store host address and set socket send address
		connected_address = host
		connection_active = false
		udp.set_dest_address(connected_address, port)
		
		# Set initial configure message
		send_configure_message()
		
		# Start connection timeout timer
		connection_timer.start();
		
		# Update UI
		get_node(\"StatusLabel\").set_text(title)
		get_node(\"ConnectButton\").set_text(\"Disconnect\")
		get_node(\"ConnectPanel\").hide()
		get_node(\"ManualConnectPanel\").hide()
		get_node(\"Controller\").set_active(true)


func disconnect_from_game(reason):
	# Transmit \"leave\" message to host
	send_leave_message()

	# Stop connection timeout timer
	connection_timer.stop();
	
	# Clear stored host address
	connected_address = \"\"
	connection_active = false
	
	# Update UI
	if(reason == \"\"):
		reason = \"Unconnected\"
	else:
		reason = \"Disconnected (\" + reason + \")\";
	get_node(\"ConnectButton\").set_text(\"Connect\")
	get_node(\"StatusLabel\").set_text(reason)


func set_controller_type(type):
	
	# Remove old controller node
	var controller = get_node(\"Controller\")
	if(controller != null):
		remove_child(controller)

	# Add new controller node
	if(type == 1):
		add_child(joystick_controller)
	else:
		add_child(button_controller)


func set_player_hue(hue):
	
	var color = Color(1.0, 1.0, 1.0, 1.0)
	color.s = 1.0
	color.v = 1.0
	color.h = hue / 255
	var color_pressed = Color(1.0, 1.0, 1.0, 1.0)
	color_pressed.s = 1.0
	color_pressed.v = 0.7
	color_pressed.h = hue / 255
	var color_disabled = Color(1.0, 1.0, 1.0, 1.0)
	color_disabled.s = 1.0
	color_disabled.v = 0.5
	color_disabled.h = hue / 255

	var theme = get_theme().duplicate();
	
	theme.set_color(\"font_color\", \"Button\", color)
	theme.set_color(\"font_color_pressed\", \"Button\", color_pressed)
	theme.set_color(\"font_color_hover\", \"Button\", color)
	theme.set_color(\"font_color_disabled\", \"Button\", color_disabled)

	theme.set_color(\"font_color\", \"OptionButton\", color)
	theme.set_color(\"font_color_pressed\", \"OptionButton\", color)
	theme.set_color(\"font_color_selected\", \"OptionButton\", color_pressed)
	
	theme.set_color(\"font_color\", \"PopupMenu\", color)
	theme.set_color(\"font_color_hover\", \"PopupMenu\", color)

	theme.set_color(\"font_color\", \"Label\", color)
	theme.set_color(\"default_color\", \"RichTextLabel\", color)
	
	theme.set_color(\"font_color\", \"LineEdit\", color)
	theme.set_color(\"cursor_color\", \"LineEdit\", color)
	theme.set_color(\"selection_color\", \"LineEdit\", color_pressed)
	
	theme.set_color(\"font_color\", \"ItemList\", color)
	theme.set_color(\"font_color_selected\", \"ItemList\", color_pressed)

	get_node(\"IntegrityIcon\").set_modulate(color);
	get_node(\"IntegrityBar\").set_color(color);
	get_node(\"TemperatureIcon\").set_modulate(color);
	get_node(\"TemperatureBar\").set_color(color);	
	get_node(\"AboutPanel/LogoTextureFrame\").set_modulate(color);

	joystick_controller.set_color(color, color_pressed)
	button_controller.set_color(color, color_pressed)
	
	player_hue = hue

	set_theme(theme)


func update_flash(delta):
	
	if(flash_intensity > 0.0):
		flash_intensity -= delta * 2.0
		if(flash_intensity < 0.0):
			flash_intensity = 0.0
	
	var off_color = Color(\"#000\")
	var flash_color = Color(1.0, 1.0, 1.0, 1.0)
	flash_color.s = 1.0
	flash_color.v = 0.5
	flash_color.h = player_hue / 255

	get_node(\"Flash\").set_modulate(off_color.linear_interpolate(flash_color, flash_intensity))


func axis_to_byte(val):
	var byte = 0
	if(val > 0.0):
		byte = int(val * 127);
	elif(val < 0.0):
		byte = 255 + int(val * 127)
	return byte
	
	
func discover_games():
	
	# Clear previous games from list
	var list = get_node(\"ConnectPanel/GameList\")
	list.clear()
	list.add_item(\"<Manual connect>\")
	list.set_item_metadata(0, \"0.0.0.0\")
	
	get_node(\"ConnectPanel/ConnectButton\").set_disabled(true)
	
	# Construct a discover message
	var msg = PoolByteArray()
	msg.push_back(0x41)		# Header (\"ACTL\")
	msg.push_back(0x43)
	msg.push_back(0x54)
	msg.push_back(0x4C)
	msg.push_back(1)		# Version
	msg.push_back(0)		# Sequence number
	msg.push_back(0)
	msg.push_back(0)		# Ack
	msg.push_back(0)	
	msg.push_back(100)		# Message type: discover
	
	# Send the message to multicast address
	var err = udp.set_dest_address(\"224.0.0.1\", port)
	if(err == OK):
		err = udp.put_packet(msg)
		if(err == OK):
			get_node(\"ConnectPanel/StatusLabel\").set_text(\"Searching for games..\")

	if(err != OK):
		get_node(\"ConnectPanel/StatusLabel\").set_text(\"Network error \" + str(err))

	udp.set_dest_address(connected_address, port)

	
func send_configure_message():
	
	var name = config.get_value(\"settings\", \"player_name\", \"Remote\").to_utf8()
	var hue = config.get_value(\"settings\", \"player_hue\", 0)
	
	# Construct a configure message
	var msg = PoolByteArray()
	msg.push_back(0x41)		# Header (\"ACTL\")
	msg.push_back(0x43)
	msg.push_back(0x54)
	msg.push_back(0x4C)
	msg.push_back(1)		# Version
	msg.push_back(0)		# Sequence number
	msg.push_back(0)
	msg.push_back(0)		# Ack
	msg.push_back(0)	
	msg.push_back(3)		# Message type: configure
	msg.push_back(config_sequence_number)
	msg.push_back(name.size())
	for i in range(0, name.size()):
		msg.push_back(name[i])
	msg.push_back(hue)
	msg.push_back(config.get_value(\"settings\", \"flags\", 0))
	
	udp.put_packet(msg)


func send_leave_message():
	# Construct a leave message
	var msg = PoolByteArray()
	msg.push_back(0x41)		# Header (\"ACTL\")
	msg.push_back(0x43)
	msg.push_back(0x54)
	msg.push_back(0x4C)
	msg.push_back(1)		# Version
	msg.push_back(0)		# Sequence number
	msg.push_back(0)
	msg.push_back(0)		# Ack
	msg.push_back(0)	
	msg.push_back(4)		# Message type: leave
	
	udp.put_packet(msg)


func handle_announce_message(packet, host, port):
	
	# Check minimum valid message size
	if(packet.size() < 11):
		return
	
	# Decode game name	
	var namedata = PoolByteArray()
	var namelength = packet[10]
	if(packet.size() < 11 + namelength):
		return # Too short message
	for i in range(0, namelength):
		namedata.push_back(packet[11 + i])
	namedata.push_back(0)
	var name = namedata.get_string_from_utf8()
	
	# Check if host is already in the list
	var list = get_node(\"ConnectPanel/GameList\")
	var index = -1
	for i in range(0, list.get_item_count()):
		if(host == list.get_item_metadata(i)):
			index = i
			break
		
	# Add or update list content
	var title = name + \" (\" + host + \")\"
	if(index >= 0):
		list.set_item_text(index, title)
	else:
		index = list.get_item_count()
		list.add_item(title)
		list.set_item_metadata(index, host)
	
	# Auto-select first game if none is selected
	if list.get_selected_items().size() == 0:
		list.select(index)
		get_node(\"ConnectPanel/ConnectButton\").set_disabled(false)
	
	# Clear \"searching games..\" status
	get_node(\"ConnectPanel/StatusLabel\").set_text(\"\")


func handle_status_message(packet, host, port):

	# Check sender address
	if(host != connected_address):
		return

	# Check minimum valid message size
	if(packet.size() < 14):
		return
	
	var config = packet[10];
	var integrity = float(packet[11]) / 255.0
	var temperature = float(packet[12]) / 255.0
	var event = packet[13]
	
	# Update status bars
	get_node(\"IntegrityBar\").set_value(integrity)
	get_node(\"TemperatureBar\").set_value(temperature)
	
	# Handle event triggers
	if(event != event_trigger):
		if((event & 0x0F) == 0x1):
			# Player ship damaged
			flash_intensity = 1.0
		event_trigger = event
	
	# Check that server configuration is up to date
	if(config != config_sequence_number && configure_timer.get_time_left() <= 0.0):
		# Send new configure message
		send_configure_message()
		# Set inhibit timer to prevent spamming configuration messages
		configure_timer.start()
	
	# Reset connection timeout timer
	connection_timer.start()
	
	# Mark connection active once we have received a status messsage from server
	connection_active = true;
	
"

[sub_resource type="ButtonGroup" id=2]

resource_local_to_scene = true
resource_name = "ControllerTypeButtonGroup"
_sections_unfolded = [ "Resource" ]

[sub_resource type="CanvasItemMaterial" id=3]

render_priority = 0
blend_mode = 1
light_mode = 0

[node name="Panel" type="Panel" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 1.0
margin_top = 1.0
margin_right = 1.0
margin_bottom = 1.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
theme = ExtResource( 1 )
script = SubResource( 1 )
_sections_unfolded = [ "Material", "Theme", "Visibility" ]

[node name="StatusLabel" type="Label" parent="." index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 0.0
margin_left = 247.0
margin_top = 23.0
margin_right = -305.0
margin_bottom = 63.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
text = "Unconnected"
valign = 1
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="ConnectButton" type="Button" parent="." index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 743.0
margin_top = 23.0
margin_right = 933.0
margin_bottom = 63.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Connect"
flat = false
align = 1
_sections_unfolded = [ "Mouse", "Theme", "Visibility" ]

[node name="SettingsButton" type="Button" parent="." index="2"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 23.0
margin_top = 23.0
margin_right = 223.0
margin_bottom = 63.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Settings"
flat = false
align = 1

[node name="SettingsPanel" type="PopupPanel" parent="." index="3"]

editor/display_folded = true
visible = false
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 79.0
margin_top = 119.0
margin_right = -81.0
margin_bottom = -81.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
popup_exclusive = true

[node name="GridContainer" type="GridContainer" parent="SettingsPanel" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 24.0
margin_top = 24.0
margin_right = 100.0
margin_bottom = -88.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
custom_constants/vseparation = 24
custom_constants/hseparation = 140
columns = 2

[node name="PlayerNameLabel" type="Label" parent="SettingsPanel/GridContainer" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 283.0
margin_bottom = 27.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 0
custom_fonts/font = ExtResource( 2 )
text = "Player name:"
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="PlayerNameLineEdit" type="LineEdit" parent="SettingsPanel/GridContainer" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 423.0
margin_right = 823.0
margin_bottom = 40.0
rect_min_size = Vector2( 400, 40 )
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 1
size_flags_horizontal = 1
size_flags_vertical = 1
custom_fonts/font = ExtResource( 2 )
max_length = 20
focus_mode = 2
context_menu_enabled = true
placeholder_alpha = 0.6
caret_blink = true
caret_blink_speed = 0.65
caret_position = 0

[node name="PlayerColorLabel" type="Label" parent="SettingsPanel/GridContainer" index="2"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 64.0
margin_right = 283.0
margin_bottom = 91.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 0
custom_fonts/font = ExtResource( 2 )
text = "Player color:"
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="PlayerColorScrollBar" type="HScrollBar" parent="SettingsPanel/GridContainer" index="3"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 423.0
margin_top = 64.0
margin_right = 823.0
margin_bottom = 104.0
rect_min_size = Vector2( 400, 40 )
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
min_value = 0.0
max_value = 255.0
step = 16.0
page = 32.0
value = 0.0
exp_edit = false
rounded = false
custom_step = -1.0

[node name="ControllerTypeLabel" type="Label" parent="SettingsPanel/GridContainer" index="4"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 128.0
margin_right = 283.0
margin_bottom = 155.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 0
custom_fonts/font = ExtResource( 2 )
text = "Controller type:"
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="ControllerTypeContainer" type="HBoxContainer" parent="SettingsPanel/GridContainer" index="5"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 423.0
margin_top = 128.0
margin_right = 823.0
margin_bottom = 161.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
alignment = 0
_sections_unfolded = [ "Rect", "Size Flags" ]

[node name="ControllerTypeButton1" type="Button" parent="SettingsPanel/GridContainer/ControllerTypeContainer" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 198.0
margin_bottom = 33.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 3
size_flags_vertical = 1
toggle_mode = true
enabled_focus_mode = 2
shortcut = null
group = SubResource( 2 )
text = "Buttons"
flat = false
align = 1
_sections_unfolded = [ "Rect", "Size Flags", "custom_colors", "custom_constants", "custom_icons", "custom_styles" ]

[node name="ControllerTypeButton2" type="Button" parent="SettingsPanel/GridContainer/ControllerTypeContainer" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 202.0
margin_right = 400.0
margin_bottom = 33.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 3
size_flags_vertical = 1
toggle_mode = true
enabled_focus_mode = 2
shortcut = null
group = SubResource( 2 )
text = "Joystick"
flat = false
align = 1
_sections_unfolded = [ "Rect", "Size Flags", "custom_colors", "custom_constants", "custom_icons", "custom_styles" ]

[node name="SensitivityLabel" type="Label" parent="SettingsPanel/GridContainer" index="6"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 185.0
margin_right = 283.0
margin_bottom = 212.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 0
text = "Joystick sensitivity:"
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="SensitivityScrollBar" type="HScrollBar" parent="SettingsPanel/GridContainer" index="7"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 423.0
margin_top = 185.0
margin_right = 823.0
margin_bottom = 225.0
rect_min_size = Vector2( 400, 40 )
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
min_value = 0.0
max_value = 1.0
step = 0.1
page = 0.125
value = 0.0
exp_edit = false
rounded = false
custom_step = -1.0

[node name="OKButton" type="Button" parent="SettingsPanel" index="1"]

anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -216.0
margin_top = -64.0
margin_right = -26.0
margin_bottom = -24.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
custom_fonts/font = ExtResource( 2 )
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "OK"
flat = false
align = 1

[node name="ConnectPanel" type="PopupPanel" parent="." index="4"]

editor/display_folded = true
visible = false
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 79.0
margin_top = 119.0
margin_right = -81.0
margin_bottom = -81.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
popup_exclusive = true

[node name="GameList" type="ItemList" parent="ConnectPanel" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 24.0
margin_top = 24.0
margin_right = -24.0
margin_bottom = -88.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = true
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
custom_constants/vseparation = 16
custom_constants/line_separation = 0
items = [  ]
select_mode = 0
allow_reselect = false
icon_mode = 1
fixed_icon_size = Vector2( 0, 0 )

[node name="ConnectButton" type="Button" parent="ConnectPanel" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 648.0
margin_top = 336.0
margin_right = 838.0
margin_bottom = 376.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
custom_fonts/font = ExtResource( 2 )
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Connect"
flat = false
align = 1

[node name="CancelButton" type="Button" parent="ConnectPanel" index="2"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 432.0
margin_top = 336.0
margin_right = 622.0
margin_bottom = 376.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
custom_fonts/font = ExtResource( 2 )
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Cancel"
flat = false
align = 1

[node name="StatusLabel" type="Label" parent="ConnectPanel" index="3"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 30.0
margin_top = 336.0
margin_right = -444.0
margin_bottom = -24.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 0
custom_fonts/font = ExtResource( 2 )
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="IntegrityBar" parent="." index="5" instance=ExtResource( 3 )]

margin_left = 79.0
margin_top = 79.0
margin_right = 479.0
margin_bottom = 111.0

[node name="TemperatureBar" parent="." index="6" instance=ExtResource( 3 )]

margin_left = 543.0
margin_top = 79.0
margin_right = 943.0
margin_bottom = 111.0

[node name="IntegrityIcon" type="Sprite" parent="." index="7"]

position = Vector2( 47, 95 )
scale = Vector2( 0.25, 0.25 )
texture = ExtResource( 4 )

[node name="TemperatureIcon" type="Sprite" parent="." index="8"]

position = Vector2( 975.75, 95 )
scale = Vector2( 0.25, 0.25 )
texture = ExtResource( 5 )

[node name="AboutPanel" type="PopupPanel" parent="." index="9"]

editor/display_folded = true
visible = false
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 79.0
margin_top = 119.0
margin_right = -81.0
margin_bottom = -81.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
popup_exclusive = true

[node name="OKButton" type="Button" parent="AboutPanel" index="0"]

anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -216.0
margin_top = -64.0
margin_right = -26.0
margin_bottom = -24.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
custom_fonts/font = ExtResource( 2 )
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "OK"
flat = false
align = 1

[node name="LogoTextureFrame" type="TextureRect" parent="AboutPanel" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 23.0
margin_top = 23.0
margin_right = 2071.0
margin_bottom = 267.0
rect_scale = Vector2( 0.4, 0.4 )
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 6 )
stretch_mode = 0

[node name="RichTextLabel" type="RichTextLabel" parent="AboutPanel" index="2"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 24.0
margin_top = 140.0
margin_right = 840.0
margin_bottom = 320.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = true
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
bbcode_enabled = false
bbcode_text = "Mobile controller application for Hyper Ultra Astronautics - A local multiplayer space arena shoot'em up on PC.

Copyright 2018 FRACTiLE Games
http://www.fractilegames.com"
visible_characters = -1
percent_visible = 1.0
meta_underlined = true
tab_size = 4
text = "Mobile controller application for Hyper Ultra Astronautics - A local multiplayer space arena shoot'em up on PC.

Copyright 2018 FRACTiLE Games
http://www.fractilegames.com"
scroll_active = true
scroll_following = false
selection_enabled = false
override_selected_font_color = false

[node name="LinkButton" type="Button" parent="AboutPanel" index="3"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 24.0
margin_top = 336.0
margin_right = 216.0
margin_bottom = 376.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Website"
flat = false
align = 1

[node name="AboutButton" type="Button" parent="." index="10"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 959.0
margin_top = 23.0
margin_right = 999.0
margin_bottom = 63.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "?"
flat = false
align = 1

[node name="PrivacyPanel" type="PopupPanel" parent="." index="11"]

editor/display_folded = true
visible = false
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 79.0
margin_top = 119.0
margin_right = 943.0
margin_bottom = 519.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
popup_exclusive = true

[node name="RichTextLabel" type="RichTextLabel" parent="PrivacyPanel" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 24.0
margin_top = 16.0
margin_right = 840.0
margin_bottom = 319.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = true
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
bbcode_enabled = false
bbcode_text = "PRIVACY POLICY

This application does not collect or process any personal data other than device network address which is needed to connect to the game.

Your device's network address and the player name you may have set will be transmitted unencrypted in the current Wi-Fi network and will be accessed by game servers running in same subnetwork."
visible_characters = -1
percent_visible = 1.0
meta_underlined = true
tab_size = 4
text = "PRIVACY POLICY

This application does not collect or process any personal data other than device network address which is needed to connect to the game.

Your device's network address and the player name you may have set will be transmitted unencrypted in the current Wi-Fi network and will be accessed by game servers running in same subnetwork."
scroll_active = true
scroll_following = false
selection_enabled = false
override_selected_font_color = false

[node name="AcceptButton" type="Button" parent="PrivacyPanel" index="1"]

anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -216.0
margin_top = -64.0
margin_right = -26.0
margin_bottom = -24.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
custom_fonts/font = ExtResource( 2 )
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Accept"
flat = false
align = 1

[node name="RejectButton" type="Button" parent="PrivacyPanel" index="2"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 24.0
margin_top = 336.0
margin_right = 216.0
margin_bottom = 376.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Reject"
flat = false
align = 1

[node name="ManualConnectPanel" type="PopupPanel" parent="." index="12"]

editor/display_folded = true
visible = false
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 79.0
margin_top = 119.0
margin_right = 943.0
margin_bottom = 519.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
popup_exclusive = false

[node name="AddressLabel" type="Label" parent="ManualConnectPanel" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 24.0
margin_top = 30.0
margin_right = 307.0
margin_bottom = 57.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 0
text = "Game host address:"
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="AddressLineEdit" type="LineEdit" parent="ManualConnectPanel" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 442.0
margin_top = 24.0
margin_right = 842.0
margin_bottom = 64.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 1
size_flags_horizontal = 1
size_flags_vertical = 1
max_length = 16
focus_mode = 2
context_menu_enabled = true
placeholder_alpha = 0.6
caret_blink = true
caret_blink_speed = 0.65
caret_position = 0

[node name="InstructionLabel" type="RichTextLabel" parent="ManualConnectPanel" index="2"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 24.0
margin_top = 90.0
margin_right = 840.0
margin_bottom = 310.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = true
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
bbcode_enabled = false
bbcode_text = "Enter the local IP address of the PC running Hyper Ultra Astronautics above.

You can see the address at the top of the screen when a new match is started on the PC. Note: Both the PC and mobile devices must be connected directly to the same sub-network (e.g. Wi-Fi access point)."
visible_characters = -1
percent_visible = 1.0
meta_underlined = true
tab_size = 4
text = "Enter the local IP address of the PC running Hyper Ultra Astronautics above.

You can see the address at the top of the screen when a new match is started on the PC. Note: Both the PC and mobile devices must be connected directly to the same sub-network (e.g. Wi-Fi access point)."
scroll_active = true
scroll_following = false
selection_enabled = false
override_selected_font_color = false

[node name="ConnectButton" type="Button" parent="ManualConnectPanel" index="3"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 650.0
margin_top = 336.0
margin_right = 840.0
margin_bottom = 376.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Connect"
flat = false
align = 1

[node name="CancelButton" type="Button" parent="ManualConnectPanel" index="4"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 432.0
margin_top = 336.0
margin_right = 622.0
margin_bottom = 376.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Cancel"
flat = false
align = 1

[node name="StatusLabel" type="Label" parent="ManualConnectPanel" index="5"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 30.0
margin_top = 336.0
margin_right = -444.0
margin_bottom = -24.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 0
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="Flash" type="Sprite" parent="." index="13"]

modulate = Color( 0, 0, 0, 1 )
material = SubResource( 3 )
position = Vector2( 507, 299 )
z_index = 100
texture = ExtResource( 7 )
_sections_unfolded = [ "Animation", "Material", "Offset", "Region", "Visibility" ]


